
uptime：
    02:34:03 up 2 days, 20:14, 1 user, load average: 0.63, 0.83, 0.88
  解释：
    02:34:03                        ：当前时间
    up 2 days, 20:14                ：系统运行时间
    1 user                          ：正在登录用户数
    load average: 0.63, 0.83, 0.88  ：分别是过去1分钟、5分钟、15分钟的平均负载(load average)


平均负载：
    简单来说就是指单位时间内，系统处于可运行状态和不可中断状态的平均进程数，也就是平均活跃进程数。它和CPU使用率没有直接
关系。
    可运行状态：
        指正在使用CPU或者正在等待CPU的进程，也就是用ps命令中看到的R状态(Runnable或Running)的进程

    不可中断状态：
        指正处于内核关键流程的进程，并且这些流程是不可打断的，比如等待硬件设备的I/O响应，也就是ps命令中看到的D状态的
    (Disk Sleep)进程
        比如当一个进程向磁盘读写数据时，为了保证数据的一致性，在得到磁盘的回复前，它是不能被其它进程中断或打断的，这个
    时候进程就处于不可中断状态。如果此时的进程被打断，就容易出现磁盘数据与进程数据不一致的问题
        所以不可中断状态实际上上系统对进程和硬件设备的一种保护机制

    因此可以简单理解为，平均负载其实就是每个CPU的平均活跃进程数相加。最理想的，就是每个CPU都刚好运行着一个进程，每个CPU
都得到了充分利用。比如平均负载为2时：
    1、在2个CPU的系统上，意味着所有的CPU都刚好被完全占用
    2、在4个CPU的系统上，意味着CPU有50的空闲
    3、在1个CPU的系统上，意味着有一半的进程竞争不到CPU

    平均负载的值和CPU的个数相等是最好的，如果少了，说明CPU得不到充分利用，如果多了，说明CPU过载了・

    查看CPU核数：
        1、top
        2、小键盘的1
        3、可以看到第三行的%CPU(s)变为了%CPU0、%CPU1、%CPU2...，这是把对所有CPU的统计转为对每个CPU的统计，可以通过这种
    方式观察到所有的CPU，得到CPU的数量

    通过不同时间的平均负载判断系统负载趋势：
        1、如果1分钟、5分钟、15分钟3个值基本相同，或者相差不大，就说明系统负载很稳定。
        2、如果1分钟的值远小于15分钟的值，就说明系统的负载正在减少，而过去15分钟却有很大的负载
        3、如果1分钟的值远大于15分钟的值，就说明最近1分钟系统负载正在增加，需要继续观察是临时性的还是持续性
        4、如果1分钟的平均负载接近或超过CPU的个数，意味着系统正在发生过载，此时就要调查分析并优化了

        一般而言，平均负载高于CPU数量的70%时，就要分析排查负载高的问题了。一旦负载过高，就可能导致进程响应变慢，进而影
    响服务的正常功能

    CPU使用率和平均负载：
        CPU使用率是单位时间内CPU的繁忙情况统计，跟平均负载并不一定完全对应
        平均负载是指单位时间内，处于可运行状态和不可中断状态的进程数。所以它不仅包括了正在使用CPU的进程，还包括了等待
    CPU和等待I/O的进程
        因此根据CPU和I/O的的平均负载比例，可以分为以下几种：
            将大量使用CPU导致平均负载升高的进程称为CPU密集型进程
            将大量等待I/O导致平均负载升高的进程称为I/O密集型进程，这种情况下平均负载高，CPU使用率不一定高
            还有大量等待CPU的进程调度也会导致平均负载升高，此时的CPU使用率也会比较高


平均负载案例：

  用到的工具：
        














