
BIO(同步阻塞)：
        BIO就是每个请求都启动一个线程/线程池去执行，如果没有请求就阻塞等待请求

NIO(同步非阻塞IO)：
        通过一个线程去查询一批有事件的channel，然后每个请求启用一个线程/线程池去处理
        因为数据并不一定时刻有交互，因此只有触发事件时才会处理，就不会一个请求死占着一个线程
        每个请求对应一个channel，多个channnel对应一个selector，selector可以去轮训看看有没有发生感兴趣的事件(事件可以用注册的方式添加)，如果有，就能拿到一个SelectionKey列表，SelectionKey里面封装了请求和事件类型，然后就遍历每个key，拿到key对应的channel，然后读或写buffer，启动线程/线程池根据不同的事件去执行不同的逻辑

AIO(异步非阻塞IO)：
        读数据和写数据都交给操作系统来做，中间通过一个Buffer来交互，系统读好了就会传个Buffer过来，数据准备好放在Buffer里面让系统去写。数据准备好后由操作系统来调接口，期间不需要轮训，因此是异步










