
	分区的作用：
		数据安全：如果要重装系统，或者清除某个分区，那么其它区不会受到影响，重装只会清空c盘
		效能：知道文件在哪个区，可以直接去那个区找，不用浪费资源在不想关的区
		缺点是：分好区之后就不能改了，如果要改动分区，就要清除原来的数据，因为要修改分区范围

	多重引导：
		开机时可以指定要使用的核心文件，比如有windows和linux两个系统，第一次选择就有M1和M2，M1就
	是启动windows系统，m2指向下一个开机程序，如果下一个没有额外的选项的话，就会直接启动linux系统

	映像文件下载：
	在http://ftp.twaren.net/Linux/CentOS/7/isos/x86_64/下载映像文件，CentOS-7-x86_64-Everything-1810.iso
的含义是：7代表第7个版本，x86_64代表64位，Everything代表包含所有东西的版本，1810说明是18年10月发布的，如
果最后面还有01这样的描述的话，就是7.01版本

	VMware vm-boc账号：admin
	VMware vm-boc密码：8822995
	
	centos root密码：8822995

	centos管理员账号：boc
	centos管理员密码：8822995

linux的文件如果要隐藏的话，只需要在名字前面加一个小数点‘.’就会认为是隐藏文件

切换文本模式和窗口界面：
	ctrl+alt+F1~F6，一般情况下F1是窗口界面，不过如果没有窗口界面那么就会是文本界面，每切换到一个新的界面都需要
重新登录，因为界面是第一次切换才创建的，因此不同的界面可以用不同的用户，在文本界面下可以用startx来启动窗口界面

命令行前面字符的含义：
    [boc@study ~]$
	boc：当前登录的用户
	@：用户名与主机名的分隔符
	study：主机名，如果主机名用多个.隔开，只会使用第一个.前面的字符
	~：当前用户的home目录，它是一个变量，如果用户是boc，这个变量则指向/home/boc
	$：命令提示符，一般用户是$，root用户是#

退出系统：exit，其实只是注销当前用户的登陆信息

命令格式：
	command --option1 --option2 param1 param2...
	指令    选项1     选项2   参数1  参数2
    命令之间用空格分隔，多个空格会视为一个，按下Enter就代表执行一行指令，\可以转移特殊字符，报货Enter，如果最后一
个字符是\，然后按下Enter键，就会去到下一行而不会立即执行

locale：
	查看编码信息

基础指令：
	date：显示日期与时间
	    在date后面加上参数：+%Y-%m-%d\ %H:%M:%S就可以打印常用的时间格式，这几个%x参数就是取出date里的部分信息

	cal：显示日历
	    cal [month] [year]，可以显示指定年月的日历，如果只写一个参数则认为是年

	bc：计算器
	    可以用+、-、*、/、^、%等符号，输入quit退出，默认情况下bc仅输出整数，如果要输出小数点就要在进入bc之后
	设置scale属性，它决定了会输出几位小数

有一些指令会直接返回结果，然后等待下一个指令，有一些指令会去到特殊的环境中，执行这个指令内部的信息，在这种情况下输
入的指令会被传给该环境，而不会是命令提示字符环境，需要退出该环境才能继续执行原本的命令，判断是否在等待指令输入环境
只需要看光标前面是否提示用户信息就知道了，比如[boc@study ~]$_就是等待输入指令

重要热键：
	tab：命令补全和文件名补全
	    如果在输入命令的时候按两次tab,就会提示以该命令开头的所有命令，如果在输入非命令的时候，就会去检测输入的
	字符匹配的路径或文件，输入指令时第一个空格之前的字符串就是命令，如果安装了bash-completion软件，有时候会有
	选项或参数补全，比如在命令后面的选项中有一个--然后按tab tab，就会出现可用的选项

	ctrl+c：
	    中断当前程序

	shift+pageUp\pageDown：
	    如果信息很长导致上面的信息被刷走了，可以用这个组合键看前面或后面的信息，shift+pageUp\pageDown在任何情
	况下都能使用，如果在指令内部的话则可以使用pageUp\pageDown，这时候他们的区别是shift+pageUp\pageDown可以跨越
	这个指令的内容看到其它的历史记录，而不加shift则只能看到这个指令的内容，无法跨越 出去

	home/end：
		在指令内部可以通过这两个键去到指令内容的开始和结束位置

--help：
	很多情况下可以通过--help来查看某些指令的选项和参数，比如date --help

man page(操作说明页)：
	使用map 命令可以查看该命令的用法，这些用法的显示就是page，空格可以跳到下一页，q可以退出说明页，shift+pageUp\pageDown
也可以在这里使用，在使用man page时，在第一行会出现man后面的指令，后面会跟着一个括号，里面有数字，这些数字的含义是：
1：可操作的指令或可执行文件；5：配置文件；8：系统管理的管理指令，比较重要的就这几个

在页面进行搜索：
	在指令页面中，比如man date指令之后，可以通过/或者?进行页面搜索，比如/date或者?hello，分别是向下搜索date和
向上搜索hello字符，并且会把找到的字符定位到页面的第一行，/向下，?向上，在进行搜索之后，可以用n或者N进行下一轮搜索
，n往下面搜索，N往上面搜索

info page：
	与man page不同，man page是一口气输出一堆信息，info page是把信息分成一个个段落，再以超链接的方式去不同的页
面浏览，每个页面都称为一个节点(node)

	info page的第一行的File标签显示文件来源，它的文件来源在CentOs7中放到了/usr/share/info/目录中，Node标签显示
当前在哪个节点，Next表示下个节点是哪个，Prev表示上个节点，Up表示上一层，这三个功能分别以它的首字母作为快捷键，q可
以退出，t可以回到top节点，也就是刚进来时的节点，h可以显示帮助信息，里面有各个按键的功能，tab可以跳跃到不同的超链接
处，在那些地方按下enter则会进行跳转，当然自己用光标进行移动然后单enter键效果一样
	如果info选择的命令没有info文件来源，也就是不支持info功能，就会按照man page的方式显示，比如info man展示的界
面和man man一样

	还有很多文件或指令没有联机帮助文档，这些东西需要额外的文件去描述，这些文件都放在/usr/share/doc目录下，每个
不同的指令或文件都可能会有多个版本，因此命名都是命令-版本的格式，还有很多软件安装的时候都会有一些安装须知，工作事
项、未来规划等等，这些文件也都放在这个目录中

    帮助总结：
	如果不知道某个指令就用man或者info，如果知道指令但是忘记了参数和选项就用--help，如果想要更多的信息就去
/usr/share/doc目录找

简单的文本编辑器：nano
	nano后面跟上文件名，如果该文件存在就编辑该文件，如果不存在就打开新的界面，最下两行会显示各种^+英文，^的意
思就是ctrl，比如ctrl+g就会进入帮助界面，ctrl+o就会保存,ctrl+w可以搜索，在保存界面最下两行还会有m-英文，m的意思就是
alt，比如alt-a就会把当前文件插入到目标文件的尾部，如果不想插入了可以用ctrl+c取消

关机注意事项：
	由于Linux是多人多任务，跟Windows单人多任务不一样，Windows关机后不会影响到别人，只要确保自己的任务状态可以
关机就可以了，Linux如果直接关机其他人正在执行的任务就会受到影响，比如传输文件传输到一半就关机了，会造成文件损坏，
还有服务器突然关机造成的问题更多，因此Linux的关机有很多需要注意的地方

关机相关的常用指令：

	观察系统的使用状态：
	    使用who(谁)命令可以查看当前系统有哪些用户在使用，使用netstat -a可以查看网络联机状态，使用ps -aux可以看
	到正在执行的程序

	通知使用者关机的时间：
	    使用shutdown治疗可以达到这个功能

	将数据同步到硬盘：
	    sync：
		由于数据需要被频繁的修改，如果总是把内存中的数据写入硬盘中再去读取会很慢，所以在默认情况下，某些加
	    载到内存中的数据就不会被写入硬盘中，就算被重复的改写也只会在内存中操作，这样无疑速度会快上很多；如此一
	    来万一系统因为某些原因造成不正常关机就会造成数据不正常，这个时候就需要sync指令把数据从内存中写入到硬盘
	    中，在关机前最好多执行几次这个指令，虽然shutdown、reboot、halt等指令在关机前都会执行这个指令，不过多执
	    行几次总是放心点
		如果使用一般的账户执行sync指令只会同步自己的数据，如果是root账户则会更新所有的数据

	常用关机指令：
	    shutdown
		1、可以自由选择关机模式，关机重启均可
		2、可以设置关机时间
		3、自定义关机信息，在关机前可以将信息发送给在线用户
		4、发出警告信息，有时候需要进行一些测试，而不想被其它使用者干扰，就可以使用这个吓一下其它使用者

		格式：shutdown [option] [date] [info]
		shutdown -k：只发送警告信息
		shutdown -r：将服务停掉后重启
		shutdown -h：将服务停掉后关机
		shutdown -c：取消正在进行的shutdown
		以上如果没有指定时间则默认一分钟
		示例：shutdown -h 10 'will shutdown 10 mins after'
		以上指令将会在十分钟后停机并立即发送警告，旧版本的一定要加上时间，不然会跳到单人维护模式，这个版本
	    会默认在一分钟后执行
	时间选项：
	    now：立刻执行
	    20:25：将会在下一个20:25执行
	    +10：十分钟后执行
		

	重启，关机：
	    reboot、halt、poweroff：
		这三个指令执行的函数库都差不多，所以当使用man reboot时，这三个指令的说明会同时出现，其中reboot是重
	    启，halt是系统停止，poweroff是系统关机，关机和停止的区别是关机会切断电源，啥都显示不了，停止的话屏幕可
	    能会保留一些信息
		基本上这几个指令都会去执行systemctl这个命令

	systemctl：
		这个指令非常复杂，是管理系统使用的，目前只干涉到关机的部分
	    重启：systemctl reboot
	    关机：systemctl poweroff
	    停止：systemctl halt
	    休眠：systemctl suspend

	由于关机/重启是很重要的行为，因此只有root才能够执行shutdown、reboot等指令，不过某些distributions中允许在
tty1-tty7中可以用一般的账号来关机或重启(tty1-tty7就是按下ctrl+alt+F1~F7切换的界面)，如果是远程管理工具的话就只能用
root账户来关机了，但某些distributions要在关机时输入root密码

	切换到root账户：
	    执行su -，执行后就要输入密码，密码正确后就会切换到root用户了

任意文件都具有[User、Group、Others]三种身份的权限：
	文件拥有者User：
	    文件的拥有者可以对这个文件进行读写

	群组Group：
	    拥有者可以创建一个群组，并为文件指定这个群组，只有加入这个群组的用户才能对这个文件进行读写

	其他人Others：
	    其他人就是不属于群组和拥有者的用户，有些文件会对其它人的身份开放一些权限，比如读和执行

	root：
	    root账号可以无视任何权限限制

    Linux中所有的账号与身份都记录在/etc/passwd文件内，个人密码记录在/etc/shadow下，组名都记录在/etc/group下，目前
的系统并没有这几个文件夹，当前的版本是CentOS Linux 7，Kernel 3.10.0

    ls指令：
	ls是list的意思，主要是显示文件与文件名相关属性

	ls -al：
	    列出所有文件的详细权限与属性，包括隐藏文件

		第一列：权限
		    权限一共有十个字符，比如：-rwxrwx---，第一个是文件类型，然后每三个分别是拥有者、群组和其他人的
		读、写、执行权限，比如上面的例子第一个字符是-：这个字符如果为[d]则是目录，如果为[-]则是文件，如果
		为[l]则是链接文件，如果为[b]则是配置文件里的可随机存取装置，如果为[c]则是串行端口设备；第二到第四
		个为rwx，说明拥有者有读写执行的权限；第五到七为rwx，说明群组有读写执行权限；第8到10是---，说明其他
		人没有权限进行任何操作
		    注意：如果用户拥有文件夹的读权限，没有执行权限，是不能进入文件夹的，因为进入文件夹需要执行权限
		，就算权限是---------，root用户也可以进行任何操作，因为它可以无视权限限制

		第二列：连接数量
		    每个文件都会将他的权限与属性记录到文件系统的i-node中，每个i-node就是一个文件夹，每个文件夹都会
		关联到一个i-node(另一个文件夹)下面，而这个属性代表了它的下级目录有多少个文件夹，也就是这个i-node下
		一级有多少个i-node

		第三轮：拥有者
		    该文件拥有者的账号

		第四列：群组
		    该文件所属群组

		第五列：文件大小
		    该文件的大小，默认单位为byte

		第六列：修改日期
		    该文件最后修改日期，如果年份较远，则只会显示日期，如果想显示完整时间日期，可以使用
		ls -l --full-time来显示

		第七列：文件名
		    文件名，如果是以.开头，则代表隐藏文件

	ls：显示所有的非隐藏文件的名称

	ls -a：显示所有文件的名称






