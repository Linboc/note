
连接：

	mysql服务器会为每一个连接分配一个线程，服务器会缓存线程，因此并不是每个新连接都会创建新线程或销毁
线程，MySql5.5之后的版本提供了一个API，支持线程池插件，可以用少量线程服务大量连接

并发控制：

	MySql解决数据的并发问题是使用了读写锁，也叫共享锁和排他锁，同一时刻只能有一个用户在写入，当有用户
在写入时其它用户就不能进行读写了，必须等这个用户写结束才会进行下一个用户的操作，同样，在读的时候也不能写
，写锁有比读锁更高的优先级，因此写锁请求有可能被插入读锁请求队列前面

锁粒度：

	既然有上锁，那就需要一个锁的范围，锁某行，还是某个表？由于如果粒度太细，那么加锁、释放锁、检查锁
等各种操作都需要大量花费系统开销，如果这些操作太频繁那么系统的性能会因此受到影响
	锁策略就是在锁的开销和数据的安全性之间寻求平衡，锁越细则系统并发度越高，锁消耗的资源也越高，锁越
粗则并发度越低，系统并发度也越低
	MySql中最重要的两种锁是表锁和行级锁，表锁开销最小，系统并发度也最低，行锁开销最大，也支持最大程度
的并发处理

事务：
	
 事务就是一组原子性的sql查询，